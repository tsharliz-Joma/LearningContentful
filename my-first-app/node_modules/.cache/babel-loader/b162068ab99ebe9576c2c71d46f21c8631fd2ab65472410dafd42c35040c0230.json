{"ast":null,"code":"import { cx, css } from 'emotion';\nimport E from 'react';\nimport L from '@contentful/f36-tokens';\nvar x = Object.defineProperty;\nvar i = Object.getOwnPropertySymbols;\nvar y = Object.prototype.hasOwnProperty,\n  P = Object.prototype.propertyIsEnumerable;\nvar f = (t, e, o) => e in t ? x(t, e, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: o\n  }) : t[e] = o,\n  m = (t, e) => {\n    for (var o in e || (e = {})) y.call(e, o) && f(t, o, e[o]);\n    if (i) for (var o of i(e)) P.call(e, o) && f(t, o, e[o]);\n    return t;\n  };\nvar p = (t, e) => {\n  var o = {};\n  for (var r in t) y.call(t, r) && e.indexOf(r) < 0 && (o[r] = t[r]);\n  if (t != null && i) for (var r of i(t)) e.indexOf(r) < 0 && P.call(t, r) && (o[r] = t[r]);\n  return o;\n};\nvar u = \"ul\";\nfunction I(C, s) {\n  var c = C,\n    {\n      as: t,\n      className: e,\n      children: o,\n      testId: r = \"cf-ui-list\"\n    } = c,\n    l = p(c, [\"as\", \"className\", \"children\", \"testId\"]);\n  return E.createElement(t || u, m({\n    \"data-test-id\": r,\n    className: cx(css({\n      margin: 0\n    }), e),\n    ref: s\n  }, l), o);\n}\nI.displayName = \"List\";\nvar n = E.forwardRef(I);\nvar a = l => {\n  var s = l,\n    {\n      className: t,\n      children: e,\n      testId: o = \"cf-ui-list-item\"\n    } = s,\n    r = p(s, [\"className\", \"children\", \"testId\"]);\n  return E.createElement(\"li\", m({\n    className: cx(css({\n      fontSize: L.fontSizeM,\n      fontFamily: L.fontStackPrimary,\n      lineHeight: L.lineHeightL,\n      listStyle: e.type === n ? \"none\" : \"\"\n    }), t),\n    \"data-test-id\": o\n  }, r), e);\n};\na.displayName = \"ListItem\";\nvar d = n;\nd.Item = a;\nexport { d as List, a as ListItem };","map":{"version":3,"names":[],"sources":["/Users/tsharliz/Documents/contentful/my-first-app/node_modules/@contentful/f36-list/src/List.tsx","/Users/tsharliz/Documents/contentful/my-first-app/node_modules/@contentful/f36-list/src/ListItem/ListItem.tsx","/Users/tsharliz/Documents/contentful/my-first-app/node_modules/@contentful/f36-list/src/CompoundList.tsx"],"sourcesContent":["import { cx, css } from 'emotion';\nimport React from 'react';\n\nimport type {\n  CommonProps,\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nconst LIST_DEFAULT_TAG = 'ul';\n\nexport interface ListInternalProps extends CommonProps {\n  as?: 'ul' | 'ol';\n  children?: React.ReactNode;\n}\n\nexport type ListProps<E extends React.ElementType = typeof LIST_DEFAULT_TAG> =\n  PolymorphicProps<ListInternalProps, E>;\n\n/**\n * List is component that helps with vertical indexing of content.\n * Every list item begins with a bullet or a number.\n */\nfunction _List<E extends React.ElementType = typeof LIST_DEFAULT_TAG>(\n  {\n    as,\n    className,\n    children,\n    testId = 'cf-ui-list',\n    ...otherProps\n  }: ListProps<E>,\n  ref: React.Ref<any>,\n) {\n  const Element: React.ElementType = as || LIST_DEFAULT_TAG;\n\n  return (\n    <Element\n      data-test-id={testId}\n      className={cx(\n        css({\n          margin: 0,\n        }),\n        className,\n      )}\n      ref={ref}\n      {...otherProps}\n    >\n      {children}\n    </Element>\n  );\n}\n\n_List.displayName = 'List';\n\nexport const List: PolymorphicComponent<\n  ExpandProps<ListInternalProps>,\n  typeof LIST_DEFAULT_TAG\n> = React.forwardRef(_List);\n","import { cx, css } from 'emotion';\nimport React from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport type { CommonProps, PropsWithHTMLElement } from '@contentful/f36-core';\n\nimport { List } from '../List';\n\nexport type ListItemProps = PropsWithHTMLElement<\n  CommonProps & {\n    children?: React.ReactNode;\n  },\n  'li'\n>;\n\nexport const ListItem = ({\n  className,\n  children,\n  testId = 'cf-ui-list-item',\n  ...otherProps\n}: ListItemProps): React.ReactElement => {\n  return (\n    <li\n      className={cx(\n        css({\n          fontSize: tokens.fontSizeM,\n          fontFamily: tokens.fontStackPrimary,\n          lineHeight: tokens.lineHeightL,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          listStyle: (children as any).type === List ? 'none' : '',\n        }),\n        className,\n      )}\n      data-test-id={testId}\n      {...otherProps}\n    >\n      {children}\n    </li>\n  );\n};\n\nListItem.displayName = 'ListItem';\n","import { List as OriginalList } from './List';\nimport { ListItem } from './ListItem/ListItem';\n\ntype CompoundList = typeof OriginalList & {\n  Item: typeof ListItem;\n};\n\nexport const List = OriginalList as CompoundList;\nList.Item = ListItem;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}