{"ast":null,"code":"import React, { useEffect, useRef, useState } from 'react';\n// ------------------ Helpers\nfunction isNumber(n) {\n  const number = parseFloat(n);\n  return !isNaN(number) && isFinite(number);\n}\nfunction isPercentage(height) {\n  // Percentage height\n  return typeof height === 'string' && height[height.length - 1] === '%' && isNumber(height.substring(0, height.length - 1));\n}\nfunction hideContent(element, height) {\n  // Check for element?.style is added cause this would fail in tests (react-test-renderer)\n  // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n  if (height === 0 && (element === null || element === void 0 ? void 0 : element.style)) {\n    element.style.display = 'none';\n  }\n}\nfunction showContent(element, height) {\n  // Check for element?.style is added cause this would fail in tests (react-test-renderer)\n  // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n  if (height === 0 && (element === null || element === void 0 ? void 0 : element.style)) {\n    element.style.display = '';\n  }\n}\nconst ANIMATION_STATE_CLASSES = {\n  animating: 'rah-animating',\n  animatingUp: 'rah-animating--up',\n  animatingDown: 'rah-animating--down',\n  animatingToHeightZero: 'rah-animating--to-height-zero',\n  animatingToHeightAuto: 'rah-animating--to-height-auto',\n  animatingToHeightSpecific: 'rah-animating--to-height-specific',\n  static: 'rah-static',\n  staticHeightZero: 'rah-static--height-zero',\n  staticHeightAuto: 'rah-static--height-auto',\n  staticHeightSpecific: 'rah-static--height-specific'\n};\nfunction getStaticStateClasses(animationStateClasses, height) {\n  return [animationStateClasses.static, height === 0 && animationStateClasses.staticHeightZero, height > 0 && animationStateClasses.staticHeightSpecific, height === 'auto' && animationStateClasses.staticHeightAuto].filter(v => v).join(' ');\n}\n// ------------------ Component\nconst propsToOmitFromDiv = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'className', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onHeightAnimationEnd', 'onHeightAnimationStart', 'style'];\nconst AnimateHeight = componentProps => {\n  const {\n    animateOpacity = false,\n    animationStateClasses = {},\n    applyInlineTransitions = true,\n    children,\n    className = '',\n    contentClassName,\n    delay: userDelay = 0,\n    duration: userDuration = 500,\n    easing = 'ease',\n    height,\n    onHeightAnimationEnd,\n    onHeightAnimationStart,\n    style\n  } = componentProps;\n  const divProps = Object.assign({}, componentProps);\n  propsToOmitFromDiv.forEach(propKey => {\n    delete divProps[propKey];\n  });\n  // ------------------ Initialization\n  const prevHeight = useRef(height);\n  const contentElement = useRef(null);\n  const animationClassesTimeoutID = useRef();\n  const timeoutID = useRef();\n  const stateClasses = useRef(Object.assign(Object.assign({}, ANIMATION_STATE_CLASSES), animationStateClasses));\n  const isBrowser = typeof window !== 'undefined';\n  const prefersReducedMotion = useRef(isBrowser && window.matchMedia ? window.matchMedia('(prefers-reduced-motion)').matches : false);\n  const delay = prefersReducedMotion.current ? 0 : userDelay;\n  const duration = prefersReducedMotion.current ? 0 : userDuration;\n  let initHeight = height;\n  let initOverflow = 'visible';\n  if (typeof initHeight === 'number') {\n    // Reset negative height to 0\n    initHeight = height < 0 ? 0 : height;\n    initOverflow = 'hidden';\n  } else if (isPercentage(initHeight)) {\n    // If value is string \"0%\" make sure we convert it to number 0\n    initHeight = height === '0%' ? 0 : height;\n    initOverflow = 'hidden';\n  }\n  const [currentHeight, setCurrentHeight] = useState(initHeight);\n  const [overflow, setOverflow] = useState(initOverflow);\n  const [useTransitions, setUseTransitions] = useState(false);\n  const [animationStateClassNames, setAnimationStateClassNames] = useState(getStaticStateClasses(stateClasses.current, height));\n  // ------------------ Did mount\n  useEffect(() => {\n    // Hide content if height is 0 (to prevent tabbing into it)\n    hideContent(contentElement.current, currentHeight);\n    // This should be explicitly run only on mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  // ------------------ Height update\n  useEffect(() => {\n    if (height !== prevHeight.current && contentElement.current) {\n      showContent(contentElement.current, prevHeight.current);\n      // Cache content height\n      contentElement.current.style.overflow = 'hidden';\n      const contentHeight = contentElement.current.offsetHeight;\n      contentElement.current.style.overflow = '';\n      // set total animation time\n      const totalDuration = duration + delay;\n      let newHeight;\n      let timeoutHeight;\n      let timeoutOverflow = 'hidden';\n      let timeoutUseTransitions;\n      const isCurrentHeightAuto = prevHeight.current === 'auto';\n      if (typeof height === 'number') {\n        // Reset negative height to 0\n        newHeight = height < 0 ? 0 : height;\n        timeoutHeight = newHeight;\n      } else if (isPercentage(height)) {\n        // If value is string \"0%\" make sure we convert it to number 0\n        newHeight = height === '0%' ? 0 : height;\n        timeoutHeight = newHeight;\n      } else {\n        // If not, animate to content height\n        // and then reset to auto\n        newHeight = contentHeight; // TODO solve contentHeight = 0\n        timeoutHeight = 'auto';\n        timeoutOverflow = undefined;\n      }\n      if (isCurrentHeightAuto) {\n        // This is the height to be animated to\n        timeoutHeight = newHeight;\n        // If previous height was 'auto'\n        // set starting height explicitly to be able to use transition\n        newHeight = contentHeight;\n      }\n      // Animation classes\n      const newAnimationStateClassNames = [stateClasses.current.animating, (prevHeight.current === 'auto' || height < prevHeight.current) && stateClasses.current.animatingUp, (height === 'auto' || height > prevHeight.current) && stateClasses.current.animatingDown, timeoutHeight === 0 && stateClasses.current.animatingToHeightZero, timeoutHeight === 'auto' && stateClasses.current.animatingToHeightAuto, timeoutHeight > 0 && stateClasses.current.animatingToHeightSpecific].filter(v => v).join(' ');\n      // Animation classes to be put after animation is complete\n      const timeoutAnimationStateClasses = getStaticStateClasses(stateClasses.current, timeoutHeight);\n      // Set starting height and animating classes\n      // When animating from 'auto' we first need to set fixed height\n      // that change should be animated\n      setCurrentHeight(newHeight);\n      setOverflow('hidden');\n      setUseTransitions(!isCurrentHeightAuto);\n      setAnimationStateClassNames(newAnimationStateClassNames);\n      // Clear timeouts\n      clearTimeout(timeoutID.current);\n      clearTimeout(animationClassesTimeoutID.current);\n      if (isCurrentHeightAuto) {\n        // When animating from 'auto' we use a short timeout to start animation\n        // after setting fixed height above\n        timeoutUseTransitions = true;\n        // Short timeout to allow rendering of the initial animation state first\n        timeoutID.current = setTimeout(() => {\n          setCurrentHeight(timeoutHeight);\n          setOverflow(timeoutOverflow);\n          setUseTransitions(timeoutUseTransitions);\n          // ANIMATION STARTS, run a callback if it exists\n          onHeightAnimationStart === null || onHeightAnimationStart === void 0 ? void 0 : onHeightAnimationStart(timeoutHeight);\n        }, 50);\n        // Set static classes and remove transitions when animation ends\n        animationClassesTimeoutID.current = setTimeout(() => {\n          setUseTransitions(false);\n          setAnimationStateClassNames(timeoutAnimationStateClasses);\n          // ANIMATION ENDS\n          // Hide content if height is 0 (to prevent tabbing into it)\n          hideContent(contentElement.current, timeoutHeight);\n          // Run a callback if it exists\n          onHeightAnimationEnd === null || onHeightAnimationEnd === void 0 ? void 0 : onHeightAnimationEnd(timeoutHeight);\n        }, totalDuration);\n      } else {\n        // ANIMATION STARTS, run a callback if it exists\n        onHeightAnimationStart === null || onHeightAnimationStart === void 0 ? void 0 : onHeightAnimationStart(newHeight);\n        // Set end height, classes and remove transitions when animation is complete\n        timeoutID.current = setTimeout(() => {\n          setCurrentHeight(timeoutHeight);\n          setOverflow(timeoutOverflow);\n          setUseTransitions(false);\n          setAnimationStateClassNames(timeoutAnimationStateClasses);\n          // ANIMATION ENDS\n          // If height is auto, don't hide the content\n          // (case when element is empty, therefore height is 0)\n          if (height !== 'auto') {\n            // Hide content if height is 0 (to prevent tabbing into it)\n            hideContent(contentElement.current, newHeight); // TODO solve newHeight = 0\n          }\n          // Run a callback if it exists\n          onHeightAnimationEnd === null || onHeightAnimationEnd === void 0 ? void 0 : onHeightAnimationEnd(newHeight);\n        }, totalDuration);\n      }\n    }\n    prevHeight.current = height;\n    return () => {\n      clearTimeout(timeoutID.current);\n      clearTimeout(animationClassesTimeoutID.current);\n    };\n    // This should be explicitly run only on height change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [height]);\n  // ------------------ Render\n  const componentStyle = Object.assign(Object.assign({}, style), {\n    height: currentHeight,\n    overflow: overflow || (style === null || style === void 0 ? void 0 : style.overflow)\n  });\n  if (useTransitions && applyInlineTransitions) {\n    componentStyle.transition = `height ${duration}ms ${easing} ${delay}ms`;\n    // Include transition passed through styles\n    if (style === null || style === void 0 ? void 0 : style.transition) {\n      componentStyle.transition = `${style.transition}, ${componentStyle.transition}`;\n    }\n    // Add webkit vendor prefix still used by opera, blackberry...\n    componentStyle.WebkitTransition = componentStyle.transition;\n  }\n  const contentStyle = {};\n  if (animateOpacity) {\n    contentStyle.transition = `opacity ${duration}ms ${easing} ${delay}ms`;\n    // Add webkit vendor prefix still used by opera, blackberry...\n    contentStyle.WebkitTransition = contentStyle.transition;\n    if (currentHeight === 0) {\n      contentStyle.opacity = 0;\n    }\n  }\n  // Check if user passed aria-hidden prop\n  const hasAriaHiddenProp = typeof divProps['aria-hidden'] !== 'undefined';\n  const ariaHidden = hasAriaHiddenProp ? divProps['aria-hidden'] : height === 0;\n  return React.createElement(\"div\", Object.assign({}, divProps, {\n    \"aria-hidden\": ariaHidden,\n    className: `${animationStateClassNames} ${className}`,\n    style: componentStyle\n  }), React.createElement(\"div\", {\n    className: contentClassName,\n    style: contentStyle,\n    ref: contentElement\n  }, children));\n};\nexport default AnimateHeight;","map":{"version":3,"names":["React","useEffect","useRef","useState","isNumber","n","number","parseFloat","isNaN","isFinite","isPercentage","height","length","substring","hideContent","element","style","display","showContent","ANIMATION_STATE_CLASSES","animating","animatingUp","animatingDown","animatingToHeightZero","animatingToHeightAuto","animatingToHeightSpecific","static","staticHeightZero","staticHeightAuto","staticHeightSpecific","getStaticStateClasses","animationStateClasses","filter","v","join","propsToOmitFromDiv","AnimateHeight","componentProps","animateOpacity","applyInlineTransitions","children","className","contentClassName","delay","userDelay","duration","userDuration","easing","onHeightAnimationEnd","onHeightAnimationStart","divProps","Object","assign","forEach","propKey","prevHeight","contentElement","animationClassesTimeoutID","timeoutID","stateClasses","isBrowser","window","prefersReducedMotion","matchMedia","matches","current","initHeight","initOverflow","currentHeight","setCurrentHeight","overflow","setOverflow","useTransitions","setUseTransitions","animationStateClassNames","setAnimationStateClassNames","contentHeight","offsetHeight","totalDuration","newHeight","timeoutHeight","timeoutOverflow","timeoutUseTransitions","isCurrentHeightAuto","undefined","newAnimationStateClassNames","timeoutAnimationStateClasses","clearTimeout","setTimeout","componentStyle","transition","WebkitTransition","contentStyle","opacity","hasAriaHiddenProp","ariaHidden","createElement","ref"],"sources":["/Users/tsharliz/Documents/contentful/my-first-app/node_modules/react-animate-height/dist/esm/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// ------------------ Helpers\nfunction isNumber(n) {\n    const number = parseFloat(n);\n    return !isNaN(number) && isFinite(number);\n}\nfunction isPercentage(height) {\n    // Percentage height\n    return (typeof height === 'string' &&\n        height[height.length - 1] === '%' &&\n        isNumber(height.substring(0, height.length - 1)));\n}\nfunction hideContent(element, height) {\n    // Check for element?.style is added cause this would fail in tests (react-test-renderer)\n    // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n    if (height === 0 && (element === null || element === void 0 ? void 0 : element.style)) {\n        element.style.display = 'none';\n    }\n}\nfunction showContent(element, height) {\n    // Check for element?.style is added cause this would fail in tests (react-test-renderer)\n    // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n    if (height === 0 && (element === null || element === void 0 ? void 0 : element.style)) {\n        element.style.display = '';\n    }\n}\nconst ANIMATION_STATE_CLASSES = {\n    animating: 'rah-animating',\n    animatingUp: 'rah-animating--up',\n    animatingDown: 'rah-animating--down',\n    animatingToHeightZero: 'rah-animating--to-height-zero',\n    animatingToHeightAuto: 'rah-animating--to-height-auto',\n    animatingToHeightSpecific: 'rah-animating--to-height-specific',\n    static: 'rah-static',\n    staticHeightZero: 'rah-static--height-zero',\n    staticHeightAuto: 'rah-static--height-auto',\n    staticHeightSpecific: 'rah-static--height-specific',\n};\nfunction getStaticStateClasses(animationStateClasses, height) {\n    return [\n        animationStateClasses.static,\n        height === 0 && animationStateClasses.staticHeightZero,\n        height > 0 && animationStateClasses.staticHeightSpecific,\n        height === 'auto' && animationStateClasses.staticHeightAuto,\n    ]\n        .filter((v) => v)\n        .join(' ');\n}\n// ------------------ Component\nconst propsToOmitFromDiv = [\n    'animateOpacity',\n    'animationStateClasses',\n    'applyInlineTransitions',\n    'children',\n    'className',\n    'contentClassName',\n    'delay',\n    'duration',\n    'easing',\n    'height',\n    'onHeightAnimationEnd',\n    'onHeightAnimationStart',\n    'style',\n];\nconst AnimateHeight = (componentProps) => {\n    const { animateOpacity = false, animationStateClasses = {}, applyInlineTransitions = true, children, className = '', contentClassName, delay: userDelay = 0, duration: userDuration = 500, easing = 'ease', height, onHeightAnimationEnd, onHeightAnimationStart, style, } = componentProps;\n    const divProps = Object.assign({}, componentProps);\n    propsToOmitFromDiv.forEach((propKey) => {\n        delete divProps[propKey];\n    });\n    // ------------------ Initialization\n    const prevHeight = useRef(height);\n    const contentElement = useRef(null);\n    const animationClassesTimeoutID = useRef();\n    const timeoutID = useRef();\n    const stateClasses = useRef(Object.assign(Object.assign({}, ANIMATION_STATE_CLASSES), animationStateClasses));\n    const isBrowser = typeof window !== 'undefined';\n    const prefersReducedMotion = useRef(isBrowser && window.matchMedia\n        ? window.matchMedia('(prefers-reduced-motion)').matches\n        : false);\n    const delay = prefersReducedMotion.current ? 0 : userDelay;\n    const duration = prefersReducedMotion.current ? 0 : userDuration;\n    let initHeight = height;\n    let initOverflow = 'visible';\n    if (typeof initHeight === 'number') {\n        // Reset negative height to 0\n        initHeight = height < 0 ? 0 : height;\n        initOverflow = 'hidden';\n    }\n    else if (isPercentage(initHeight)) {\n        // If value is string \"0%\" make sure we convert it to number 0\n        initHeight = height === '0%' ? 0 : height;\n        initOverflow = 'hidden';\n    }\n    const [currentHeight, setCurrentHeight] = useState(initHeight);\n    const [overflow, setOverflow] = useState(initOverflow);\n    const [useTransitions, setUseTransitions] = useState(false);\n    const [animationStateClassNames, setAnimationStateClassNames] = useState(getStaticStateClasses(stateClasses.current, height));\n    // ------------------ Did mount\n    useEffect(() => {\n        // Hide content if height is 0 (to prevent tabbing into it)\n        hideContent(contentElement.current, currentHeight);\n        // This should be explicitly run only on mount\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    // ------------------ Height update\n    useEffect(() => {\n        if (height !== prevHeight.current && contentElement.current) {\n            showContent(contentElement.current, prevHeight.current);\n            // Cache content height\n            contentElement.current.style.overflow = 'hidden';\n            const contentHeight = contentElement.current.offsetHeight;\n            contentElement.current.style.overflow = '';\n            // set total animation time\n            const totalDuration = duration + delay;\n            let newHeight;\n            let timeoutHeight;\n            let timeoutOverflow = 'hidden';\n            let timeoutUseTransitions;\n            const isCurrentHeightAuto = prevHeight.current === 'auto';\n            if (typeof height === 'number') {\n                // Reset negative height to 0\n                newHeight = height < 0 ? 0 : height;\n                timeoutHeight = newHeight;\n            }\n            else if (isPercentage(height)) {\n                // If value is string \"0%\" make sure we convert it to number 0\n                newHeight = height === '0%' ? 0 : height;\n                timeoutHeight = newHeight;\n            }\n            else {\n                // If not, animate to content height\n                // and then reset to auto\n                newHeight = contentHeight; // TODO solve contentHeight = 0\n                timeoutHeight = 'auto';\n                timeoutOverflow = undefined;\n            }\n            if (isCurrentHeightAuto) {\n                // This is the height to be animated to\n                timeoutHeight = newHeight;\n                // If previous height was 'auto'\n                // set starting height explicitly to be able to use transition\n                newHeight = contentHeight;\n            }\n            // Animation classes\n            const newAnimationStateClassNames = [\n                stateClasses.current.animating,\n                (prevHeight.current === 'auto' || height < prevHeight.current) &&\n                    stateClasses.current.animatingUp,\n                (height === 'auto' || height > prevHeight.current) &&\n                    stateClasses.current.animatingDown,\n                timeoutHeight === 0 && stateClasses.current.animatingToHeightZero,\n                timeoutHeight === 'auto' && stateClasses.current.animatingToHeightAuto,\n                timeoutHeight > 0 && stateClasses.current.animatingToHeightSpecific,\n            ]\n                .filter((v) => v)\n                .join(' ');\n            // Animation classes to be put after animation is complete\n            const timeoutAnimationStateClasses = getStaticStateClasses(stateClasses.current, timeoutHeight);\n            // Set starting height and animating classes\n            // When animating from 'auto' we first need to set fixed height\n            // that change should be animated\n            setCurrentHeight(newHeight);\n            setOverflow('hidden');\n            setUseTransitions(!isCurrentHeightAuto);\n            setAnimationStateClassNames(newAnimationStateClassNames);\n            // Clear timeouts\n            clearTimeout(timeoutID.current);\n            clearTimeout(animationClassesTimeoutID.current);\n            if (isCurrentHeightAuto) {\n                // When animating from 'auto' we use a short timeout to start animation\n                // after setting fixed height above\n                timeoutUseTransitions = true;\n                // Short timeout to allow rendering of the initial animation state first\n                timeoutID.current = setTimeout(() => {\n                    setCurrentHeight(timeoutHeight);\n                    setOverflow(timeoutOverflow);\n                    setUseTransitions(timeoutUseTransitions);\n                    // ANIMATION STARTS, run a callback if it exists\n                    onHeightAnimationStart === null || onHeightAnimationStart === void 0 ? void 0 : onHeightAnimationStart(timeoutHeight);\n                }, 50);\n                // Set static classes and remove transitions when animation ends\n                animationClassesTimeoutID.current = setTimeout(() => {\n                    setUseTransitions(false);\n                    setAnimationStateClassNames(timeoutAnimationStateClasses);\n                    // ANIMATION ENDS\n                    // Hide content if height is 0 (to prevent tabbing into it)\n                    hideContent(contentElement.current, timeoutHeight);\n                    // Run a callback if it exists\n                    onHeightAnimationEnd === null || onHeightAnimationEnd === void 0 ? void 0 : onHeightAnimationEnd(timeoutHeight);\n                }, totalDuration);\n            }\n            else {\n                // ANIMATION STARTS, run a callback if it exists\n                onHeightAnimationStart === null || onHeightAnimationStart === void 0 ? void 0 : onHeightAnimationStart(newHeight);\n                // Set end height, classes and remove transitions when animation is complete\n                timeoutID.current = setTimeout(() => {\n                    setCurrentHeight(timeoutHeight);\n                    setOverflow(timeoutOverflow);\n                    setUseTransitions(false);\n                    setAnimationStateClassNames(timeoutAnimationStateClasses);\n                    // ANIMATION ENDS\n                    // If height is auto, don't hide the content\n                    // (case when element is empty, therefore height is 0)\n                    if (height !== 'auto') {\n                        // Hide content if height is 0 (to prevent tabbing into it)\n                        hideContent(contentElement.current, newHeight); // TODO solve newHeight = 0\n                    }\n                    // Run a callback if it exists\n                    onHeightAnimationEnd === null || onHeightAnimationEnd === void 0 ? void 0 : onHeightAnimationEnd(newHeight);\n                }, totalDuration);\n            }\n        }\n        prevHeight.current = height;\n        return () => {\n            clearTimeout(timeoutID.current);\n            clearTimeout(animationClassesTimeoutID.current);\n        };\n        // This should be explicitly run only on height change\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [height]);\n    // ------------------ Render\n    const componentStyle = Object.assign(Object.assign({}, style), { height: currentHeight, overflow: overflow || (style === null || style === void 0 ? void 0 : style.overflow) });\n    if (useTransitions && applyInlineTransitions) {\n        componentStyle.transition = `height ${duration}ms ${easing} ${delay}ms`;\n        // Include transition passed through styles\n        if (style === null || style === void 0 ? void 0 : style.transition) {\n            componentStyle.transition = `${style.transition}, ${componentStyle.transition}`;\n        }\n        // Add webkit vendor prefix still used by opera, blackberry...\n        componentStyle.WebkitTransition = componentStyle.transition;\n    }\n    const contentStyle = {};\n    if (animateOpacity) {\n        contentStyle.transition = `opacity ${duration}ms ${easing} ${delay}ms`;\n        // Add webkit vendor prefix still used by opera, blackberry...\n        contentStyle.WebkitTransition = contentStyle.transition;\n        if (currentHeight === 0) {\n            contentStyle.opacity = 0;\n        }\n    }\n    // Check if user passed aria-hidden prop\n    const hasAriaHiddenProp = typeof divProps['aria-hidden'] !== 'undefined';\n    const ariaHidden = hasAriaHiddenProp ? divProps['aria-hidden'] : height === 0;\n    return (React.createElement(\"div\", Object.assign({}, divProps, { \"aria-hidden\": ariaHidden, className: `${animationStateClassNames} ${className}`, style: componentStyle }),\n        React.createElement(\"div\", { className: contentClassName, style: contentStyle, ref: contentElement }, children)));\n};\nexport default AnimateHeight;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D;AACA,SAASC,QAAQA,CAACC,CAAC,EAAE;EACjB,MAAMC,MAAM,GAAGC,UAAU,CAACF,CAAC,CAAC;EAC5B,OAAO,CAACG,KAAK,CAACF,MAAM,CAAC,IAAIG,QAAQ,CAACH,MAAM,CAAC;AAC7C;AACA,SAASI,YAAYA,CAACC,MAAM,EAAE;EAC1B;EACA,OAAQ,OAAOA,MAAM,KAAK,QAAQ,IAC9BA,MAAM,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IACjCR,QAAQ,CAACO,MAAM,CAACE,SAAS,CAAC,CAAC,EAAEF,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;AACxD;AACA,SAASE,WAAWA,CAACC,OAAO,EAAEJ,MAAM,EAAE;EAClC;EACA;EACA,IAAIA,MAAM,KAAK,CAAC,KAAKI,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,KAAK,CAAC,EAAE;IACnFD,OAAO,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;EAClC;AACJ;AACA,SAASC,WAAWA,CAACH,OAAO,EAAEJ,MAAM,EAAE;EAClC;EACA;EACA,IAAIA,MAAM,KAAK,CAAC,KAAKI,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,KAAK,CAAC,EAAE;IACnFD,OAAO,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE;EAC9B;AACJ;AACA,MAAME,uBAAuB,GAAG;EAC5BC,SAAS,EAAE,eAAe;EAC1BC,WAAW,EAAE,mBAAmB;EAChCC,aAAa,EAAE,qBAAqB;EACpCC,qBAAqB,EAAE,+BAA+B;EACtDC,qBAAqB,EAAE,+BAA+B;EACtDC,yBAAyB,EAAE,mCAAmC;EAC9DC,MAAM,EAAE,YAAY;EACpBC,gBAAgB,EAAE,yBAAyB;EAC3CC,gBAAgB,EAAE,yBAAyB;EAC3CC,oBAAoB,EAAE;AAC1B,CAAC;AACD,SAASC,qBAAqBA,CAACC,qBAAqB,EAAEpB,MAAM,EAAE;EAC1D,OAAO,CACHoB,qBAAqB,CAACL,MAAM,EAC5Bf,MAAM,KAAK,CAAC,IAAIoB,qBAAqB,CAACJ,gBAAgB,EACtDhB,MAAM,GAAG,CAAC,IAAIoB,qBAAqB,CAACF,oBAAoB,EACxDlB,MAAM,KAAK,MAAM,IAAIoB,qBAAqB,CAACH,gBAAgB,CAC9D,CACII,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAChBC,IAAI,CAAC,GAAG,CAAC;AAClB;AACA;AACA,MAAMC,kBAAkB,GAAG,CACvB,gBAAgB,EAChB,uBAAuB,EACvB,wBAAwB,EACxB,UAAU,EACV,WAAW,EACX,kBAAkB,EAClB,OAAO,EACP,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,sBAAsB,EACtB,wBAAwB,EACxB,OAAO,CACV;AACD,MAAMC,aAAa,GAAIC,cAAc,IAAK;EACtC,MAAM;IAAEC,cAAc,GAAG,KAAK;IAAEP,qBAAqB,GAAG,CAAC,CAAC;IAAEQ,sBAAsB,GAAG,IAAI;IAAEC,QAAQ;IAAEC,SAAS,GAAG,EAAE;IAAEC,gBAAgB;IAAEC,KAAK,EAAEC,SAAS,GAAG,CAAC;IAAEC,QAAQ,EAAEC,YAAY,GAAG,GAAG;IAAEC,MAAM,GAAG,MAAM;IAAEpC,MAAM;IAAEqC,oBAAoB;IAAEC,sBAAsB;IAAEjC;EAAO,CAAC,GAAGqB,cAAc;EAC3R,MAAMa,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEf,cAAc,CAAC;EAClDF,kBAAkB,CAACkB,OAAO,CAAEC,OAAO,IAAK;IACpC,OAAOJ,QAAQ,CAACI,OAAO,CAAC;EAC5B,CAAC,CAAC;EACF;EACA,MAAMC,UAAU,GAAGrD,MAAM,CAACS,MAAM,CAAC;EACjC,MAAM6C,cAAc,GAAGtD,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMuD,yBAAyB,GAAGvD,MAAM,EAAE;EAC1C,MAAMwD,SAAS,GAAGxD,MAAM,EAAE;EAC1B,MAAMyD,YAAY,GAAGzD,MAAM,CAACiD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjC,uBAAuB,CAAC,EAAEY,qBAAqB,CAAC,CAAC;EAC7G,MAAM6B,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW;EAC/C,MAAMC,oBAAoB,GAAG5D,MAAM,CAAC0D,SAAS,IAAIC,MAAM,CAACE,UAAU,GAC5DF,MAAM,CAACE,UAAU,CAAC,0BAA0B,CAAC,CAACC,OAAO,GACrD,KAAK,CAAC;EACZ,MAAMrB,KAAK,GAAGmB,oBAAoB,CAACG,OAAO,GAAG,CAAC,GAAGrB,SAAS;EAC1D,MAAMC,QAAQ,GAAGiB,oBAAoB,CAACG,OAAO,GAAG,CAAC,GAAGnB,YAAY;EAChE,IAAIoB,UAAU,GAAGvD,MAAM;EACvB,IAAIwD,YAAY,GAAG,SAAS;EAC5B,IAAI,OAAOD,UAAU,KAAK,QAAQ,EAAE;IAChC;IACAA,UAAU,GAAGvD,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM;IACpCwD,YAAY,GAAG,QAAQ;EAC3B,CAAC,MACI,IAAIzD,YAAY,CAACwD,UAAU,CAAC,EAAE;IAC/B;IACAA,UAAU,GAAGvD,MAAM,KAAK,IAAI,GAAG,CAAC,GAAGA,MAAM;IACzCwD,YAAY,GAAG,QAAQ;EAC3B;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlE,QAAQ,CAAC+D,UAAU,CAAC;EAC9D,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGpE,QAAQ,CAACgE,YAAY,CAAC;EACtD,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuE,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGxE,QAAQ,CAAC2B,qBAAqB,CAAC6B,YAAY,CAACM,OAAO,EAAEtD,MAAM,CAAC,CAAC;EAC7H;EACAV,SAAS,CAAC,MAAM;IACZ;IACAa,WAAW,CAAC0C,cAAc,CAACS,OAAO,EAAEG,aAAa,CAAC;IAClD;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACAnE,SAAS,CAAC,MAAM;IACZ,IAAIU,MAAM,KAAK4C,UAAU,CAACU,OAAO,IAAIT,cAAc,CAACS,OAAO,EAAE;MACzD/C,WAAW,CAACsC,cAAc,CAACS,OAAO,EAAEV,UAAU,CAACU,OAAO,CAAC;MACvD;MACAT,cAAc,CAACS,OAAO,CAACjD,KAAK,CAACsD,QAAQ,GAAG,QAAQ;MAChD,MAAMM,aAAa,GAAGpB,cAAc,CAACS,OAAO,CAACY,YAAY;MACzDrB,cAAc,CAACS,OAAO,CAACjD,KAAK,CAACsD,QAAQ,GAAG,EAAE;MAC1C;MACA,MAAMQ,aAAa,GAAGjC,QAAQ,GAAGF,KAAK;MACtC,IAAIoC,SAAS;MACb,IAAIC,aAAa;MACjB,IAAIC,eAAe,GAAG,QAAQ;MAC9B,IAAIC,qBAAqB;MACzB,MAAMC,mBAAmB,GAAG5B,UAAU,CAACU,OAAO,KAAK,MAAM;MACzD,IAAI,OAAOtD,MAAM,KAAK,QAAQ,EAAE;QAC5B;QACAoE,SAAS,GAAGpE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM;QACnCqE,aAAa,GAAGD,SAAS;MAC7B,CAAC,MACI,IAAIrE,YAAY,CAACC,MAAM,CAAC,EAAE;QAC3B;QACAoE,SAAS,GAAGpE,MAAM,KAAK,IAAI,GAAG,CAAC,GAAGA,MAAM;QACxCqE,aAAa,GAAGD,SAAS;MAC7B,CAAC,MACI;QACD;QACA;QACAA,SAAS,GAAGH,aAAa,CAAC,CAAC;QAC3BI,aAAa,GAAG,MAAM;QACtBC,eAAe,GAAGG,SAAS;MAC/B;MACA,IAAID,mBAAmB,EAAE;QACrB;QACAH,aAAa,GAAGD,SAAS;QACzB;QACA;QACAA,SAAS,GAAGH,aAAa;MAC7B;MACA;MACA,MAAMS,2BAA2B,GAAG,CAChC1B,YAAY,CAACM,OAAO,CAAC7C,SAAS,EAC9B,CAACmC,UAAU,CAACU,OAAO,KAAK,MAAM,IAAItD,MAAM,GAAG4C,UAAU,CAACU,OAAO,KACzDN,YAAY,CAACM,OAAO,CAAC5C,WAAW,EACpC,CAACV,MAAM,KAAK,MAAM,IAAIA,MAAM,GAAG4C,UAAU,CAACU,OAAO,KAC7CN,YAAY,CAACM,OAAO,CAAC3C,aAAa,EACtC0D,aAAa,KAAK,CAAC,IAAIrB,YAAY,CAACM,OAAO,CAAC1C,qBAAqB,EACjEyD,aAAa,KAAK,MAAM,IAAIrB,YAAY,CAACM,OAAO,CAACzC,qBAAqB,EACtEwD,aAAa,GAAG,CAAC,IAAIrB,YAAY,CAACM,OAAO,CAACxC,yBAAyB,CACtE,CACIO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAChBC,IAAI,CAAC,GAAG,CAAC;MACd;MACA,MAAMoD,4BAA4B,GAAGxD,qBAAqB,CAAC6B,YAAY,CAACM,OAAO,EAAEe,aAAa,CAAC;MAC/F;MACA;MACA;MACAX,gBAAgB,CAACU,SAAS,CAAC;MAC3BR,WAAW,CAAC,QAAQ,CAAC;MACrBE,iBAAiB,CAAC,CAACU,mBAAmB,CAAC;MACvCR,2BAA2B,CAACU,2BAA2B,CAAC;MACxD;MACAE,YAAY,CAAC7B,SAAS,CAACO,OAAO,CAAC;MAC/BsB,YAAY,CAAC9B,yBAAyB,CAACQ,OAAO,CAAC;MAC/C,IAAIkB,mBAAmB,EAAE;QACrB;QACA;QACAD,qBAAqB,GAAG,IAAI;QAC5B;QACAxB,SAAS,CAACO,OAAO,GAAGuB,UAAU,CAAC,MAAM;UACjCnB,gBAAgB,CAACW,aAAa,CAAC;UAC/BT,WAAW,CAACU,eAAe,CAAC;UAC5BR,iBAAiB,CAACS,qBAAqB,CAAC;UACxC;UACAjC,sBAAsB,KAAK,IAAI,IAAIA,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAAC+B,aAAa,CAAC;QACzH,CAAC,EAAE,EAAE,CAAC;QACN;QACAvB,yBAAyB,CAACQ,OAAO,GAAGuB,UAAU,CAAC,MAAM;UACjDf,iBAAiB,CAAC,KAAK,CAAC;UACxBE,2BAA2B,CAACW,4BAA4B,CAAC;UACzD;UACA;UACAxE,WAAW,CAAC0C,cAAc,CAACS,OAAO,EAAEe,aAAa,CAAC;UAClD;UACAhC,oBAAoB,KAAK,IAAI,IAAIA,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,oBAAoB,CAACgC,aAAa,CAAC;QACnH,CAAC,EAAEF,aAAa,CAAC;MACrB,CAAC,MACI;QACD;QACA7B,sBAAsB,KAAK,IAAI,IAAIA,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAAC8B,SAAS,CAAC;QACjH;QACArB,SAAS,CAACO,OAAO,GAAGuB,UAAU,CAAC,MAAM;UACjCnB,gBAAgB,CAACW,aAAa,CAAC;UAC/BT,WAAW,CAACU,eAAe,CAAC;UAC5BR,iBAAiB,CAAC,KAAK,CAAC;UACxBE,2BAA2B,CAACW,4BAA4B,CAAC;UACzD;UACA;UACA;UACA,IAAI3E,MAAM,KAAK,MAAM,EAAE;YACnB;YACAG,WAAW,CAAC0C,cAAc,CAACS,OAAO,EAAEc,SAAS,CAAC,CAAC,CAAC;UACpD;UACA;UACA/B,oBAAoB,KAAK,IAAI,IAAIA,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,oBAAoB,CAAC+B,SAAS,CAAC;QAC/G,CAAC,EAAED,aAAa,CAAC;MACrB;IACJ;IACAvB,UAAU,CAACU,OAAO,GAAGtD,MAAM;IAC3B,OAAO,MAAM;MACT4E,YAAY,CAAC7B,SAAS,CAACO,OAAO,CAAC;MAC/BsB,YAAY,CAAC9B,yBAAyB,CAACQ,OAAO,CAAC;IACnD,CAAC;IACD;IACA;EACJ,CAAC,EAAE,CAACtD,MAAM,CAAC,CAAC;EACZ;EACA,MAAM8E,cAAc,GAAGtC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEpC,KAAK,CAAC,EAAE;IAAEL,MAAM,EAAEyD,aAAa;IAAEE,QAAQ,EAAEA,QAAQ,KAAKtD,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACsD,QAAQ;EAAE,CAAC,CAAC;EAC/K,IAAIE,cAAc,IAAIjC,sBAAsB,EAAE;IAC1CkD,cAAc,CAACC,UAAU,GAAI,UAAS7C,QAAS,MAAKE,MAAO,IAAGJ,KAAM,IAAG;IACvE;IACA,IAAI3B,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC0E,UAAU,EAAE;MAChED,cAAc,CAACC,UAAU,GAAI,GAAE1E,KAAK,CAAC0E,UAAW,KAAID,cAAc,CAACC,UAAW,EAAC;IACnF;IACA;IACAD,cAAc,CAACE,gBAAgB,GAAGF,cAAc,CAACC,UAAU;EAC/D;EACA,MAAME,YAAY,GAAG,CAAC,CAAC;EACvB,IAAItD,cAAc,EAAE;IAChBsD,YAAY,CAACF,UAAU,GAAI,WAAU7C,QAAS,MAAKE,MAAO,IAAGJ,KAAM,IAAG;IACtE;IACAiD,YAAY,CAACD,gBAAgB,GAAGC,YAAY,CAACF,UAAU;IACvD,IAAItB,aAAa,KAAK,CAAC,EAAE;MACrBwB,YAAY,CAACC,OAAO,GAAG,CAAC;IAC5B;EACJ;EACA;EACA,MAAMC,iBAAiB,GAAG,OAAO5C,QAAQ,CAAC,aAAa,CAAC,KAAK,WAAW;EACxE,MAAM6C,UAAU,GAAGD,iBAAiB,GAAG5C,QAAQ,CAAC,aAAa,CAAC,GAAGvC,MAAM,KAAK,CAAC;EAC7E,OAAQX,KAAK,CAACgG,aAAa,CAAC,KAAK,EAAE7C,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,QAAQ,EAAE;IAAE,aAAa,EAAE6C,UAAU;IAAEtD,SAAS,EAAG,GAAEiC,wBAAyB,IAAGjC,SAAU,EAAC;IAAEzB,KAAK,EAAEyE;EAAe,CAAC,CAAC,EACvKzF,KAAK,CAACgG,aAAa,CAAC,KAAK,EAAE;IAAEvD,SAAS,EAAEC,gBAAgB;IAAE1B,KAAK,EAAE4E,YAAY;IAAEK,GAAG,EAAEzC;EAAe,CAAC,EAAEhB,QAAQ,CAAC,CAAC;AACxH,CAAC;AACD,eAAeJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}