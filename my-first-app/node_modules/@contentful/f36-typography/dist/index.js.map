{"version":3,"sources":["../src/Heading/Heading.tsx","../src/Text/Text.tsx","../src/Subheading/Subheading.tsx","../src/Typography.tsx","../src/DisplayText/DisplayText.tsx","../src/SectionHeading/SectionHeading.tsx","../src/Paragraph/Paragraph.tsx"],"names":["React","tokens","css","cx","Box","TEXT_DEFAULT_TAG","truncatedStyle","wordBreakStyle","_Text","_a","ref","_b","fontSize","fontStack","fontWeight","fontColor","lineHeight","children","isTruncated","isWordBreak","as","className","margin","otherProps","__objRest","Element","__spreadProps","__spreadValues","Text","HEADING_DEFAULT_TAG","_Heading","testId","Heading","SUBHEADING_DEFAULT_TAG","_Subheading","Subheading","useEffect","Typography","props","DISPLAY_TEXT_DEFAULT_TAG","_DisplayText","size","DisplayText","SECTION_HEADING_DEFAULT_TAG","_SectionHeading","SectionHeading","Paragraph"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '../Text';\n\nconst HEADING_DEFAULT_TAG = 'h1';\n\nexport type HeadingElement = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nexport interface HeadingInternalProps extends CommonProps, MarginProps {\n  as?: HeadingElement;\n  children?: React.ReactNode;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type HeadingProps<\n  E extends React.ElementType = typeof HEADING_DEFAULT_TAG,\n> = PolymorphicProps<HeadingInternalProps, E>;\n\nfunction _Heading<E extends React.ElementType = typeof HEADING_DEFAULT_TAG>(\n  { children, testId = 'cf-ui-heading', ...otherProps }: HeadingProps<E>,\n  ref: React.Ref<any>,\n) {\n  return (\n    <Text\n      as={HEADING_DEFAULT_TAG}\n      testId={testId}\n      marginBottom=\"spacingM\"\n      fontWeight=\"fontWeightDemiBold\"\n      fontColor=\"gray900\"\n      fontSize=\"fontSizeXl\"\n      lineHeight=\"lineHeightXl\"\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_Heading.displayName = 'Heading';\n\nexport const Heading: PolymorphicComponent<\n  ExpandProps<HeadingInternalProps>,\n  typeof HEADING_DEFAULT_TAG\n> = React.forwardRef(_Heading);\n","import React from 'react';\nimport tokens, {\n  FontSizeTokens,\n  LineHeightTokens,\n  FontWeightTokens,\n  FontStackTokens,\n  ColorTokens,\n} from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\nimport {\n  Box,\n  type PolymorphicComponent,\n  type CommonProps,\n  type MarginProps,\n  type PolymorphicProps,\n  type ExpandProps,\n} from '@contentful/f36-core';\n\nexport interface TextInternalProps extends CommonProps, MarginProps {\n  children?: React.ReactNode;\n  fontSize?: FontSizeTokens;\n  lineHeight?: LineHeightTokens;\n  fontStack?: FontStackTokens;\n  fontWeight?: FontWeightTokens;\n  fontColor?: ColorTokens;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nconst TEXT_DEFAULT_TAG = 'span';\n\nfunction truncatedStyle() {\n  return css({\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n  });\n}\n\nfunction wordBreakStyle() {\n  return css({\n    wordBreak: 'break-word',\n  });\n}\n\nexport type TextProps<E extends React.ElementType = typeof TEXT_DEFAULT_TAG> =\n  PolymorphicProps<TextInternalProps, E>;\n\nfunction _Text<E extends React.ElementType = typeof TEXT_DEFAULT_TAG>(\n  {\n    fontSize = 'fontSizeM',\n    fontStack = 'fontStackPrimary',\n    fontWeight = 'fontWeightNormal',\n    fontColor = 'gray800',\n    lineHeight = 'lineHeightM',\n    children,\n    isTruncated,\n    isWordBreak,\n    as,\n    className,\n    margin = 'none',\n    ...otherProps\n  }: TextProps<E>,\n  ref: React.Ref<any>,\n) {\n  const Element: React.ElementType = as || TEXT_DEFAULT_TAG;\n\n  return (\n    <Box\n      {...otherProps}\n      as={Element}\n      className={cx(\n        css({\n          padding: 0,\n          fontFamily: tokens[fontStack],\n          fontWeight: tokens[fontWeight],\n          color: tokens[fontColor],\n          fontSize: tokens[fontSize],\n          lineHeight: tokens[lineHeight],\n        }),\n        isTruncated ? truncatedStyle() : null,\n        isWordBreak ? wordBreakStyle() : null,\n        className,\n      )}\n      margin={margin}\n      ref={ref}\n    >\n      {children}\n    </Box>\n  );\n}\n\n_Text.displayName = 'Text';\n\nexport const Text: PolymorphicComponent<\n  ExpandProps<TextInternalProps>,\n  typeof TEXT_DEFAULT_TAG\n> = React.forwardRef(_Text);\n","import React from 'react';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport type { HeadingElement } from '../Heading';\nimport { Text } from '../Text';\n\nconst SUBHEADING_DEFAULT_TAG = 'h3';\n\nexport interface SubheadingInternalProps extends CommonProps, MarginProps {\n  children?: React.ReactNode;\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type SubheadingProps<\n  E extends React.ElementType = typeof SUBHEADING_DEFAULT_TAG,\n> = PolymorphicProps<SubheadingInternalProps, E>;\n\nfunction _Subheading<\n  E extends React.ElementType = typeof SUBHEADING_DEFAULT_TAG,\n>(\n  { children, testId = 'cf-ui-subheading', ...otherProps }: SubheadingProps<E>,\n  ref: React.Ref<any>,\n) {\n  return (\n    <Text\n      as={SUBHEADING_DEFAULT_TAG}\n      testId={testId}\n      marginBottom=\"spacingM\"\n      fontSize=\"fontSizeL\"\n      lineHeight=\"lineHeightL\"\n      fontWeight=\"fontWeightDemiBold\"\n      fontColor=\"gray900\"\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_Subheading.displayName = 'Subheading';\n\nexport const Subheading: PolymorphicComponent<\n  ExpandProps<SubheadingInternalProps>,\n  typeof SUBHEADING_DEFAULT_TAG\n> = React.forwardRef(_Subheading);\n","import React, { useEffect } from 'react';\n\nexport interface TypographyProps {\n  children?: React.ReactNode;\n}\n\n/**\n * @deprecated\n */\nexport const Typography = (props: TypographyProps) => {\n  useEffect(() => {\n    console.warn(\n      'Forma 36: Typography component is deprecated. You can safely remove it from your components.',\n    );\n  }, []);\n  return <>{props.children}</>;\n};\n\nTypography.displayName = 'Typography';\n","import React from 'react';\nimport { FontSizeTokens, LineHeightTokens } from '@contentful/f36-tokens';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '../Text';\nimport type { HeadingElement } from '../Heading';\n\nconst DISPLAY_TEXT_DEFAULT_TAG = 'h2';\n\nexport interface DisplayTextInternalProps extends CommonProps, MarginProps {\n  children?: React.ReactNode;\n  size?: 'default' | 'large';\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type DisplayTextProps<\n  E extends React.ElementType = typeof DISPLAY_TEXT_DEFAULT_TAG,\n> = PolymorphicProps<DisplayTextInternalProps, E>;\n\nfunction _DisplayText<\n  E extends React.ElementType = typeof DISPLAY_TEXT_DEFAULT_TAG,\n>(\n  {\n    children,\n    size = 'default',\n    testId = 'cf-ui-display-text',\n    ...otherProps\n  }: DisplayTextProps<E>,\n  ref: React.Ref<any>,\n) {\n  let fontSize: FontSizeTokens = 'fontSize2Xl';\n  let lineHeight: LineHeightTokens = 'lineHeight2Xl';\n\n  if (size === 'large') {\n    fontSize = 'fontSize3Xl';\n    lineHeight = 'lineHeight3Xl';\n  }\n\n  return (\n    <Text\n      as={DISPLAY_TEXT_DEFAULT_TAG}\n      testId={testId}\n      marginBottom={size === 'default' ? 'spacingL' : 'spacingXl'}\n      fontSize={fontSize}\n      lineHeight={lineHeight}\n      fontColor=\"gray900\"\n      fontWeight=\"fontWeightDemiBold\"\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_DisplayText.displayName = 'DisplayText';\n\nexport const DisplayText: PolymorphicComponent<\n  ExpandProps<DisplayTextInternalProps>,\n  typeof DISPLAY_TEXT_DEFAULT_TAG\n> = React.forwardRef(_DisplayText);\n","import React from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { css, cx } from 'emotion';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicComponent,\n  PolymorphicProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport type { HeadingElement } from '../Heading';\nimport { Text } from '../Text';\n\nconst SECTION_HEADING_DEFAULT_TAG = 'h2';\n\nexport interface SectionHeadingInternalProps extends CommonProps, MarginProps {\n  children?: React.ReactNode;\n  as?: HeadingElement;\n  isTruncated?: boolean;\n  isWordBreak?: boolean;\n}\n\nexport type SectionHeadingProps<\n  E extends React.ElementType = typeof SECTION_HEADING_DEFAULT_TAG,\n> = PolymorphicProps<SectionHeadingInternalProps, E>;\n\nfunction _SectionHeading<\n  E extends React.ElementType = typeof SECTION_HEADING_DEFAULT_TAG,\n>(\n  {\n    children,\n    className,\n    testId = 'cf-ui-section-heading',\n    ...otherProps\n  }: SectionHeadingProps<E>,\n  ref: React.Ref<any>,\n) {\n  return (\n    <Text\n      as={SECTION_HEADING_DEFAULT_TAG}\n      testId={testId}\n      marginBottom=\"spacingL\"\n      fontWeight=\"fontWeightDemiBold\"\n      fontColor=\"gray900\"\n      fontSize=\"fontSizeS\"\n      lineHeight=\"lineHeightS\"\n      className={cx(\n        css({\n          letterSpacing: tokens.letterSpacingWide,\n          textTransform: 'uppercase',\n        }),\n        className,\n      )}\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n}\n\n_SectionHeading.displayName = 'SectionHeading';\n\nexport const SectionHeading: PolymorphicComponent<\n  ExpandProps<SectionHeadingInternalProps>,\n  typeof SECTION_HEADING_DEFAULT_TAG\n> = React.forwardRef(_SectionHeading);\n","import React from 'react';\nimport type {\n  PropsWithHTMLElement,\n  CommonProps,\n  MarginProps,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '../Text';\n\nexport type ParagraphInternalProps = CommonProps &\n  MarginProps & {\n    children: React.ReactNode;\n    isTruncated?: boolean;\n    isWordBreak?: boolean;\n  };\n\nexport type ParagraphProps = PropsWithHTMLElement<ParagraphInternalProps, 'p'>;\n\nexport const Paragraph = React.forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<ParagraphProps>\n>(({ children, testId = 'cf-ui-paragraph', ...otherProps }, ref) => {\n  return (\n    <Text\n      as=\"p\"\n      testId={testId}\n      marginBottom=\"spacingM\"\n      lineHeight=\"lineHeightM\"\n      {...otherProps}\n      ref={ref}\n    >\n      {children}\n    </Text>\n  );\n});\n\nParagraph.displayName = 'Paragraph';\n"]}