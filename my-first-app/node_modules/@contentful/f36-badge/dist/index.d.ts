import React from 'react';
import { PropsWithHTMLElement, CommonProps, PickUnion, EntityStatus } from '@contentful/f36-core';

declare type BadgeSize = 'default' | 'small';
declare type BadgeVariant = 'negative' | 'positive' | 'primary' | 'secondary' | 'warning' | 'primary-filled' | 'featured';

declare type BadgeSizeWithIconProps = {
    /**
     * Sets the size of the component
     * @default default
     */
    size?: Exclude<BadgeSize, 'small'>;
    /**
     * Expects any of the icon components. Renders the icon aligned to the start
     */
    startIcon?: React.ReactElement;
    /**
     * Expects any of the icon components. Renders the icon aligned to the end
     */
    endIcon?: React.ReactElement;
} | {
    /**
     * Sets the size of the component
     * @default default
     */
    size: PickUnion<BadgeSize, 'small'>;
    startIcon?: never;
    endIcon?: never;
};
declare type BadgeInternalProps = CommonProps & BadgeSizeWithIconProps & {
    /**
     * Determines the variation of the component
     * @default primary
     */
    variant?: BadgeVariant;
    children: React.ReactNode;
};
declare type BadgeProps = PropsWithHTMLElement<BadgeInternalProps, 'div'>;
declare const Badge: React.ForwardRefExoticComponent<BadgeProps & React.RefAttributes<HTMLDivElement>>;

interface EntityStatusBadgeProps extends Omit<BadgeProps, 'variant' | 'children' | 'endIcon' | 'startIcon'> {
    entityStatus: EntityStatus;
}
declare const _EntityStatusBadge: React.ForwardRefExoticComponent<EntityStatusBadgeProps & React.RefAttributes<HTMLDivElement>>;

export { Badge, BadgeProps, BadgeVariant, _EntityStatusBadge as EntityStatusBadge, EntityStatusBadgeProps };
