{"version":3,"sources":["../../src/Menu.tsx","../../src/useArrowKeyNavigation.ts","../../src/MenuContext.ts","../../src/MenuList/MenuList.tsx","../../src/SubmenuContext.ts","../../src/MenuList/MenuList.styles.ts","../../src/MenuList/MenuListHeader.tsx","../../src/MenuList/MenuListFooter.tsx","../../src/MenuItem/MenuItem.tsx","../../src/MenuItem/MenuItem.styles.ts","../../src/MenuTrigger/MenuTrigger.tsx","../../src/MenuDivider/MenuDivider.tsx","../../src/MenuDivider/MenuDivider.styles.ts","../../src/MenuSectionTitle/MenuSectionTitle.tsx","../../src/MenuSectionTitle/MenuSectionTitle.styles.ts","../../src/Submenu/Submenu.tsx","../../src/SubmenuTrigger/SubmenuTrigger.tsx","../../src/SubmenuTrigger/SubmenuTrigger.styles.ts","../../src/CompoundMenu.tsx"],"names":["React","useCallback","useMemo","useRef","useEffect","mergeRefs","useId","useControllableState","Popover","useState","ARROW_KEY_TYPES","useArrowKeyNavigation","itemsContainerRef","itemsSelector","keyType","focusedIndex","setFocusedIndex","handleArrowsKeyDown","event","container","items","lastItemIndex","focusFirstItem","focusLastItem","focusNextItem","focusPrevItem","fn","MenuContext","useMenuContext","context","MenuContextProvider","MENU_ITEMS_SELECTOR","Menu","props","_a","closeOnSelect","closeOnBlur","closeOnEsc","children","onOpen","otherProps","__objRest","isOpen","handleOpen","handleClose","isControlled","triggerRef","menuListRef","menuId","menuItems","focusMenuItem","item","itemIndex","menuItem","closeAndFocusTrigger","handleMenuListKeyDown","isMouseDown","contextValue","_props","_ref","_b","_c","_d","relatedTarget","targetIsMenu","targetIsTrigger","targetIsSubmenu","isSubmenuTrigger","__spreadProps","__spreadValues","SubmenuContext","useSubmenuContext","SubmenuContextProvider","cx","css","tokens","getMenuHeaderStyles","getMenuFooterStyles","getMenuListStyles","MenuListHeader","testId","className","styles","MenuListFooter","assertChild","child","_MenuList","ref","getMenuListProps","submenuContext","header","footer","appendChild","extendedOtherProps","MenuList","getMenuItemStyles","MENU_ITEM_DEFAULT_TAG","_MenuItem","as","isInitiallyFocused","id","itemTestId","getMenuItemProps","itemRef","Element","MenuItem","MenuTrigger","getTriggerProps","getMenuDividerStyles","MenuDivider","SectionHeading","getMenuSectionTitleStyles","MenuSectionTitle","SUBMENU_OFFSET","Submenu","onClose","isParentMenuOpen","propsToPropagateToSubmenus","mouseLeaveTimerRef","setIsOpen","ChevronRightIcon","getSubmenuTriggerStyles","isActive","_SubmenuTrigger","getSubmenuTriggerProps","SubmenuTrigger"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useEffect } from 'react';\nimport { mergeRefs, useId, useControllableState } from '@contentful/f36-core';\nimport { Popover, type PopoverProps } from '@contentful/f36-popover';\n\nimport { useArrowKeyNavigation } from './useArrowKeyNavigation';\nimport { MenuContextProvider, MenuContextType } from './MenuContext';\n\nconst MENU_ITEMS_SELECTOR = '[role=\"menuitem\"]:not(:disabled)';\n\nexport interface MenuProps\n  extends Omit<PopoverProps, 'autoFocus' | 'id' | 'closeOnBlur'> {\n  /**\n   * By default, the Menu is uncontrolled (manage it's expanded state by itself)\n   * But you can make it controlled by providing boolean (true/false)\n   */\n  isOpen?: boolean;\n\n  /**\n   * If `true`, the Menu will be initially opened.\n   */\n  defaultIsOpen?: boolean;\n\n  /**\n   * Callback fired when the Menu opens\n   */\n  onOpen?: () => void;\n\n  /**\n   * Callback fired when the Menu closes\n   */\n  onClose?: () => void;\n\n  /**\n   * If `true`, the Menu will close when a menu item is\n   * clicked\n   *\n   * Note: This prop will be propagated to all submenus,\n   * unless you will override it with props on submenu itself\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean;\n\n  /**\n   * If true, the menu will close when you blur out it by clicking outside\n   *\n   * Note: This prop will be propagated to all submenus,\n   * unless you will override it with props on submenu itself\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean;\n\n  /**\n   * If true, the menu will close when you hit the Esc key\n   *\n   * Note: This prop will be propagated to all submenus,\n   * unless you will override it with props on submenu itself\n   *\n   * @default true\n   */\n  closeOnEsc?: boolean;\n}\n\nexport function Menu(props: MenuProps) {\n  const {\n    closeOnSelect = true,\n    closeOnBlur = true,\n    closeOnEsc = true,\n    children,\n    onOpen,\n    ...otherProps\n  } = props;\n  const { isOpen, handleOpen, handleClose, isControlled } =\n    useControllableState({\n      isOpen: props.isOpen,\n      defaultIsOpen: props.defaultIsOpen,\n      onOpen,\n      onClose: props.onClose,\n    });\n\n  const triggerRef = useRef<HTMLButtonElement>(null);\n  const menuListRef = useRef<HTMLDivElement>(null);\n\n  const menuId = useId(null, 'menu');\n\n  const { focusedIndex, handleArrowsKeyDown, setFocusedIndex } =\n    useArrowKeyNavigation({\n      itemsContainerRef: menuListRef,\n      itemsSelector: MENU_ITEMS_SELECTOR,\n    });\n\n  useEffect(() => {\n    if (isOpen && menuListRef.current) {\n      const menuItems =\n        menuListRef.current.querySelectorAll(MENU_ITEMS_SELECTOR);\n\n      if (menuItems.length > 0 && focusedIndex < menuItems.length) {\n        // timeout trick to prevent scroll from jumping\n        // when the popover is not positioned correctly yet in the opening phase\n        setTimeout(() => {\n          (menuItems[focusedIndex] as HTMLElement).focus({\n            preventScroll: false,\n          });\n        }, 0);\n      }\n    }\n  }, [isOpen, focusedIndex]);\n\n  const focusMenuItem = useCallback(\n    (item: HTMLElement) => {\n      const menuItems =\n        menuListRef.current.querySelectorAll(MENU_ITEMS_SELECTOR);\n\n      const itemIndex = [...menuItems].findIndex(\n        (menuItem) => item === menuItem,\n      );\n\n      if (itemIndex !== -1) {\n        setFocusedIndex(itemIndex);\n      }\n    },\n    [setFocusedIndex],\n  );\n\n  const closeAndFocusTrigger = useCallback(() => {\n    handleClose();\n    triggerRef.current?.focus({ preventScroll: true });\n  }, [handleClose]);\n\n  const handleMenuListKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        closeAndFocusTrigger();\n        return;\n      }\n\n      // we don't want to propagate other keydown events except `Tab`\n      event.stopPropagation();\n\n      if (event.key === 'ArrowLeft') {\n        event.preventDefault();\n        closeAndFocusTrigger();\n        return;\n      }\n\n      handleArrowsKeyDown(event);\n    },\n    [closeAndFocusTrigger, handleArrowsKeyDown],\n  );\n\n  // Safari has an issue with the relatedTarget that we use on the onBlur for menuListProps,\n  // which was causing the menu to close and reopen when clicking on the trigger.\n  // We will use the isMouseDown to prevent triggering blur in the cases where the user clicks on the trigger.\n  const isMouseDown = useRef<Boolean>(false);\n\n  const contextValue: MenuContextType = useMemo(\n    () => ({\n      isOpen,\n      menuId,\n      focusMenuItem,\n      getTriggerProps: (_props = {}, _ref = null) => ({\n        onMouseDown: (event) => {\n          isMouseDown.current = true;\n          _props.onMouseDown?.(event);\n        },\n        onMouseUp: (event) => {\n          isMouseDown.current = false;\n          _props.onMouseUp?.(event);\n        },\n        onClick: (event) => {\n          // if the user made component controlled by providing isOpen prop\n          // but onOpen callback is not provided, we won't add toggle logic\n          // to the trigger component. So they can make any toggle logic on their own.\n          const isFullyControlled = isControlled && !onOpen;\n\n          if (!isFullyControlled) {\n            if (isOpen) {\n              handleClose();\n            } else {\n              handleOpen();\n            }\n          }\n\n          _props.onClick?.(event);\n        },\n        ref: mergeRefs(triggerRef, _ref),\n      }),\n      getMenuListProps: (_props = {}, _ref = null) => ({\n        ref: mergeRefs(menuListRef, _ref),\n        onKeyDown: (event) => {\n          handleMenuListKeyDown(event);\n          _props.onKeyDown?.(event);\n        },\n        onBlur: (event) => {\n          _props.onBlur?.(event);\n\n          if (!closeOnBlur) {\n            return;\n          }\n\n          const relatedTarget = event.relatedTarget as Node;\n\n          const targetIsMenu =\n            menuListRef.current === relatedTarget ||\n            menuListRef.current?.contains(relatedTarget);\n          const targetIsTrigger =\n            triggerRef.current === relatedTarget ||\n            triggerRef.current?.contains(relatedTarget) ||\n            isMouseDown.current;\n          const targetIsSubmenu =\n            relatedTarget?.parentElement?.dataset.parentMenu === menuId;\n\n          if (targetIsMenu || targetIsTrigger || targetIsSubmenu) {\n            event.stopPropagation();\n            return;\n          }\n\n          handleClose();\n        },\n      }),\n      getMenuItemProps: (_props = {}) => ({\n        onClick: (event) => {\n          _props.onClick?.(event);\n\n          const isSubmenuTrigger = Boolean(\n            (event.target as HTMLElement).getAttribute('aria-haspopup'),\n          );\n          if (closeOnSelect && !isSubmenuTrigger) {\n            closeAndFocusTrigger();\n          }\n        },\n      }),\n      propsToPropagateToSubmenus: {\n        closeOnSelect,\n        closeOnBlur,\n        closeOnEsc,\n      },\n    }),\n    [\n      menuId,\n      isOpen,\n      handleMenuListKeyDown,\n      closeOnSelect,\n      handleClose,\n      handleOpen,\n      focusMenuItem,\n      closeOnBlur,\n      closeOnEsc,\n      closeAndFocusTrigger,\n      isControlled,\n      onOpen,\n    ],\n  );\n\n  return (\n    <MenuContextProvider value={contextValue}>\n      <Popover\n        {...otherProps}\n        isOpen={isOpen}\n        onClose={handleClose}\n        id={menuId}\n        closeOnEsc={closeOnEsc}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={false}\n        closeOnBlur={false}\n      >\n        {children}\n      </Popover>\n    </MenuContextProvider>\n  );\n}\n","import { useState, useCallback } from 'react';\n\ninterface UseArrowKeyNavigationProps {\n  itemsContainerRef: React.MutableRefObject<HTMLElement>;\n  itemsSelector: string;\n  keyType?: 'vertical' | 'horizontal';\n  initialFocusedIndex?: number;\n}\n\nconst ARROW_KEY_TYPES = {\n  vertical: {\n    prev: 'ArrowUp',\n    next: 'ArrowDown',\n  },\n  horizontal: {\n    prev: 'ArrowLeft',\n    next: 'ArrowRight',\n  },\n};\n\nexport const useArrowKeyNavigation = ({\n  itemsContainerRef,\n  itemsSelector,\n  keyType = 'vertical',\n}: UseArrowKeyNavigationProps) => {\n  const [focusedIndex, setFocusedIndex] = useState<number>(0);\n\n  const handleArrowsKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const container = itemsContainerRef.current;\n      if (!container) return;\n\n      const items = container.querySelectorAll(itemsSelector);\n      if (items.length === 0) return;\n\n      const lastItemIndex = items.length - 1;\n\n      const focusFirstItem = () => setFocusedIndex(0);\n      const focusLastItem = () => setFocusedIndex(lastItemIndex);\n      const focusNextItem = () => {\n        if (focusedIndex === lastItemIndex) {\n          focusFirstItem();\n        } else {\n          setFocusedIndex(focusedIndex + 1);\n        }\n      };\n      const focusPrevItem = () => {\n        if (focusedIndex === 0) {\n          focusLastItem();\n        } else {\n          setFocusedIndex(focusedIndex - 1);\n        }\n      };\n\n      const keyToFnMap = {\n        [ARROW_KEY_TYPES[keyType].next]: focusNextItem,\n        [ARROW_KEY_TYPES[keyType].prev]: focusPrevItem,\n      };\n\n      const fn = keyToFnMap[event.key];\n      if (fn) {\n        event.preventDefault();\n        fn();\n      }\n    },\n    [focusedIndex, itemsSelector, itemsContainerRef, keyType],\n  );\n\n  return { focusedIndex, handleArrowsKeyDown, setFocusedIndex };\n};\n","import React, { ComponentPropsWithRef } from 'react';\nimport { MenuProps } from '.';\n\nexport type MenuContextType = {\n  isOpen: boolean;\n  menuId: string;\n  focusMenuItem: (item: HTMLElement) => void;\n  getTriggerProps: (\n    _props: ComponentPropsWithRef<'button'>,\n    _ref: React.Ref<HTMLButtonElement>,\n  ) => ComponentPropsWithRef<'button'>;\n  getMenuListProps: (\n    _props: ComponentPropsWithRef<'div'>,\n    _ref: React.Ref<HTMLDivElement>,\n  ) => ComponentPropsWithRef<'div'>;\n  getMenuItemProps: (\n    _props: ComponentPropsWithRef<'button'>,\n  ) => ComponentPropsWithRef<'button'>;\n  propsToPropagateToSubmenus: Pick<\n    MenuProps,\n    'closeOnBlur' | 'closeOnEsc' | 'closeOnSelect'\n  >;\n};\n\nconst MenuContext = React.createContext<MenuContextType | undefined>(undefined);\n\nexport const useMenuContext = () => {\n  const context = React.useContext(MenuContext);\n\n  if (context === undefined) {\n    throw new Error('useMenuContext must be used within a MenuContextProvider');\n  }\n\n  return context;\n};\n\nexport const MenuContextProvider = MenuContext.Provider;\n","import React from 'react';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { useMenuContext } from '../MenuContext';\nimport { useSubmenuContext } from '../SubmenuContext';\nimport { Popover } from '@contentful/f36-popover';\nimport { cx } from 'emotion';\nimport { getMenuListStyles } from './MenuList.styles';\nimport { MenuListHeader } from './MenuListHeader';\nimport { MenuListFooter } from './MenuListFooter';\n\ninterface MenuListInternalProps extends CommonProps {\n  children?: React.ReactNode;\n}\n\nfunction assertChild(child: any): child is { type: { displayName: string } } {\n  return Boolean(child?.type?.displayName);\n}\n\nexport type MenuListProps = PropsWithHTMLElement<MenuListInternalProps, 'div'>;\n\nconst _MenuList = (\n  props: ExpandProps<MenuListProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    children,\n    testId = 'cf-ui-menu-list',\n    className,\n    ...otherProps\n  } = props;\n\n  const { getMenuListProps } = useMenuContext();\n  const submenuContext = useSubmenuContext();\n\n  let header: React.ReactElement | null = null;\n  let footer: React.ReactElement | null = null;\n  const items: React.ReactElement[] = [];\n\n  React.Children.forEach(children, (child) => {\n    let appendChild = true;\n    if (assertChild(child)) {\n      if (child.type.displayName === MenuListHeader.displayName) {\n        header = child as unknown as React.ReactElement;\n        appendChild = false;\n      } else if (child.type.displayName === MenuListFooter.displayName) {\n        footer = child as unknown as React.ReactElement;\n        appendChild = false;\n      }\n    }\n    if (appendChild) {\n      items.push(child as unknown as React.ReactElement);\n    }\n  });\n\n  const styles = getMenuListStyles({\n    hasStickyHeader: Boolean(header),\n    hasStickyFooter: Boolean(footer),\n  });\n\n  const extendedOtherProps = submenuContext\n    ? submenuContext.getSubmenuListProps(otherProps)\n    : otherProps;\n\n  return (\n    <Popover.Content\n      role=\"menu\"\n      {...extendedOtherProps}\n      {...getMenuListProps(extendedOtherProps, ref)}\n      className={cx(styles.container, className)}\n      testId={testId}\n    >\n      {header}\n      {items}\n      {footer}\n    </Popover.Content>\n  );\n};\n\nexport const MenuList = React.forwardRef(_MenuList);\n","import React, { ComponentPropsWithRef, ComponentPropsWithoutRef } from 'react';\n\nexport type SubmenuContextType = {\n  isOpen: boolean;\n  getSubmenuListProps: (\n    _props: ComponentPropsWithRef<'div'>,\n  ) => { 'data-parent-menu': string } & ComponentPropsWithoutRef<'div'>;\n  getSubmenuTriggerProps: (\n    _props: ComponentPropsWithRef<'button'>,\n    _ref: React.Ref<HTMLButtonElement>,\n  ) => ComponentPropsWithRef<'button'>;\n};\n\nconst SubmenuContext = React.createContext<SubmenuContextType | undefined>(\n  undefined,\n);\n\nexport const useSubmenuContext = () => {\n  const context = React.useContext(SubmenuContext);\n  return context;\n};\n\nexport const SubmenuContextProvider = SubmenuContext.Provider;\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getMenuHeaderStyles = () => {\n  return css({\n    position: 'sticky',\n    top: 0,\n    left: 0,\n    backgroundColor: tokens.colorWhite,\n    borderBottom: `1px solid ${tokens.gray300}`,\n    padding: `${tokens.spacingXs} 0`,\n    zIndex: 1001,\n  });\n};\n\nexport const getMenuFooterStyles = () => {\n  return css({\n    position: 'sticky',\n    bottom: 0,\n    left: 0,\n    backgroundColor: tokens.colorWhite,\n    borderTop: `1px solid ${tokens.gray300}`,\n    padding: `${tokens.spacingXs} 0`,\n    zIndex: 1001,\n  });\n};\n\nexport const getMenuListStyles = (props: {\n  hasStickyFooter?: boolean;\n  hasStickyHeader?: boolean;\n}) => ({\n  container: css({\n    overflowY: 'auto',\n    position: 'relative',\n    padding: 0,\n    paddingTop: props.hasStickyHeader ? 0 : tokens.spacingXs,\n    paddingBottom: props.hasStickyFooter ? 0 : tokens.spacingXs,\n  }),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nimport { getMenuHeaderStyles } from './MenuList.styles';\n\nexport type MenuListHeaderProps = PropsWithHTMLElement<CommonProps, 'div'>;\n\nexport const MenuListHeader: React.FC<ExpandProps<MenuListHeaderProps>> = (\n  props,\n) => {\n  const {\n    children,\n    testId = 'cf-ui-menu-list-header',\n    className,\n    ...otherProps\n  } = props;\n\n  const styles = getMenuHeaderStyles();\n\n  return (\n    <div\n      data-test-id={testId}\n      className={cx(styles, className)}\n      {...otherProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nMenuListHeader.displayName = 'MenuListHeader';\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nimport { getMenuFooterStyles } from './MenuList.styles';\n\nexport type MenuListFooterProps = PropsWithHTMLElement<CommonProps, 'div'>;\n\nexport const MenuListFooter: React.FC<ExpandProps<MenuListFooterProps>> = (\n  props,\n) => {\n  const {\n    children,\n    testId = 'cf-ui-menu-list-footer',\n    className,\n    ...otherProps\n  } = props;\n\n  const styles = getMenuFooterStyles();\n\n  return (\n    <div\n      data-test-id={testId}\n      className={cx(styles, className)}\n      {...otherProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nMenuListFooter.displayName = 'MenuListFooter';\n","import React, { useEffect, useRef } from 'react';\nimport { cx } from 'emotion';\nimport {\n  mergeRefs,\n  useId,\n  type CommonProps,\n  type PolymorphicComponent,\n  type PolymorphicProps,\n  type ExpandProps,\n} from '@contentful/f36-core';\n\nimport { useMenuContext } from '../MenuContext';\nimport { getMenuItemStyles } from './MenuItem.styles';\n\nconst MENU_ITEM_DEFAULT_TAG = 'button';\n\ninterface MenuItemInternalProps extends CommonProps {\n  children?: React.ReactNode;\n  as?: 'a' | 'button';\n\n  /**\n   * Sets focus on item\n   */\n  isInitiallyFocused?: boolean;\n}\n\nexport type MenuItemProps<\n  E extends React.ElementType = typeof MENU_ITEM_DEFAULT_TAG,\n> = PolymorphicProps<MenuItemInternalProps, E>;\n\nfunction _MenuItem<E extends React.ElementType = typeof MENU_ITEM_DEFAULT_TAG>(\n  props: MenuItemProps<E>,\n  ref: React.Ref<any>,\n) {\n  const { testId, className, as, isInitiallyFocused, ...otherProps } = props;\n\n  const id = useId(undefined, 'menu-item');\n  const itemTestId = testId || `cf-ui-${id}`;\n  const styles = getMenuItemStyles();\n\n  const { getMenuItemProps, focusMenuItem } = useMenuContext();\n\n  const itemRef = useRef<HTMLElement>(null);\n  useEffect(() => {\n    if (isInitiallyFocused && itemRef.current) {\n      focusMenuItem(itemRef.current);\n    }\n  }, [isInitiallyFocused, focusMenuItem]);\n\n  const Element = (as ?? MENU_ITEM_DEFAULT_TAG) as React.ElementType;\n\n  return (\n    <Element\n      role=\"menuitem\"\n      {...otherProps}\n      {...getMenuItemProps(otherProps)}\n      className={cx(styles.root, className)}\n      data-test-id={itemTestId}\n      ref={mergeRefs(itemRef, ref)}\n      tabIndex={-1}\n    >\n      {props.children}\n    </Element>\n  );\n}\n\n_MenuItem.displayName = 'MenuItem';\n\nexport const MenuItem: PolymorphicComponent<\n  ExpandProps<MenuItemInternalProps>,\n  typeof MENU_ITEM_DEFAULT_TAG\n> = React.forwardRef(_MenuItem);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getMenuItemStyles = () => {\n  return {\n    root: css({\n      display: 'block',\n      width: '100%',\n      background: 'none',\n      border: 0,\n      margin: 0,\n      outline: 'none',\n      fontSize: tokens.fontSizeM,\n      lineHeight: tokens.lineHeightM,\n      fontWeight: tokens.fontWeightNormal,\n      position: 'relative',\n      textAlign: 'left',\n      padding: `${tokens.spacingXs} ${tokens.spacingM}`,\n      wordBreak: 'break-word',\n      whiteSpace: 'break-spaces',\n      cursor: 'pointer',\n      hyphens: 'auto',\n      minWidth: '150px',\n      textDecoration: 'none',\n      color: tokens.gray800,\n\n      '&:hover': {\n        backgroundColor: tokens.gray100,\n      },\n      '&:focus': {\n        boxShadow: `inset ${tokens.glowPrimary}`,\n        // just to make boxShadow with rounded corners\n        borderRadius: tokens.borderRadiusMedium,\n      },\n      '&:focus:not(:focus-visible)': {\n        boxShadow: 'unset',\n        borderRadius: 'unset',\n      },\n      '&:focus-visible': {\n        boxShadow: `inset ${tokens.glowPrimary}`,\n        borderRadius: tokens.borderRadiusMedium,\n      },\n      '&:active': {\n        backgroundColor: tokens.gray200,\n      },\n      '&:disabled': {\n        opacity: 0.5,\n        cursor: 'auto',\n      },\n    }),\n  };\n};\n","import React from 'react';\nimport { Popover } from '@contentful/f36-popover';\nimport { useMenuContext } from '../MenuContext';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport interface MenuTriggerProps {\n  children: React.ReactNode;\n}\n\nexport const MenuTrigger = (props: ExpandProps<MenuTriggerProps>) => {\n  const child = React.Children.only(props.children) as any;\n  const { getTriggerProps } = useMenuContext();\n\n  return (\n    <Popover.Trigger>\n      {React.cloneElement(child, {\n        ...getTriggerProps(child.props, child.ref),\n        ['aria-haspopup']: 'menu',\n      })}\n    </Popover.Trigger>\n  );\n};\n","import React from 'react';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { cx } from 'emotion';\nimport { getMenuDividerStyles } from './MenuDivider.styles';\n\nexport type MenuDividerProps = PropsWithHTMLElement<CommonProps, 'hr'>;\n\nexport const MenuDivider = (props: ExpandProps<MenuDividerProps>) => {\n  const {\n    children,\n    testId = 'cf-ui-menu-divider',\n    className,\n    ...otherProps\n  } = props;\n\n  const styles = getMenuDividerStyles();\n\n  return (\n    <hr\n      aria-orientation=\"horizontal\"\n      data-test-id={testId}\n      className={cx(styles, className)}\n      {...otherProps}\n    />\n  );\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getMenuDividerStyles = () =>\n  css({\n    border: 'none',\n    width: '100%',\n    height: '1px',\n    background: tokens.gray300,\n    margin: `${tokens.spacingXs} 0`,\n  });\n","import React from 'react';\nimport { cx } from 'emotion';\nimport {\n  SectionHeading,\n  type SectionHeadingProps,\n} from '@contentful/f36-typography';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nimport { getMenuSectionTitleStyles } from './MenuSectionTitle.styles';\n\nexport type MenuSectionTitleProps = SectionHeadingProps;\n\nexport const MenuSectionTitle = (props: ExpandProps<MenuSectionTitleProps>) => {\n  const {\n    children,\n    testId = 'cf-ui-menu-section-title',\n    className,\n    ...otherProps\n  } = props;\n\n  const styles = getMenuSectionTitleStyles();\n\n  return (\n    <SectionHeading\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, and only use it\n      // as a label\n      aria-hidden=\"true\"\n      testId={testId}\n      className={cx(styles, className)}\n      marginBottom=\"none\"\n      {...otherProps}\n    >\n      {children}\n    </SectionHeading>\n  );\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getMenuSectionTitleStyles = () =>\n  css({\n    textAlign: 'left',\n    padding: `${tokens.spacingXs} ${tokens.spacingM}`,\n    lineHeight: tokens.lineHeightM,\n\n    'hr + &': {\n      marginTop: '-8px',\n    },\n  });\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Menu, MenuProps } from '../Menu';\nimport { useMenuContext } from '../MenuContext';\nimport { SubmenuContextProvider, SubmenuContextType } from '../SubmenuContext';\nimport { mergeRefs } from '@contentful/f36-core';\n\nconst SUBMENU_OFFSET: [number, number] = [-8, 2];\n\nexport type SubmenuProps = Omit<\n  MenuProps,\n  | 'placement'\n  | 'offset'\n  | 'usePortal'\n  | 'isOpen'\n  | 'isAutoalignmentEnabled'\n  | 'defaultIsOpen'\n>;\n\nexport const Submenu = (props: SubmenuProps) => {\n  const { onClose, onOpen, ...otherProps } = props;\n\n  const {\n    isOpen: isParentMenuOpen,\n    menuId,\n    propsToPropagateToSubmenus,\n  } = useMenuContext();\n\n  const triggerRef = useRef<HTMLButtonElement>(null);\n  const mouseLeaveTimerRef = useRef(null);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n    window.clearTimeout(mouseLeaveTimerRef.current);\n\n    onOpen?.();\n  }, [onOpen]);\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    window.clearTimeout(mouseLeaveTimerRef.current);\n\n    onClose?.();\n  }, [onClose]);\n  const closeAndFocusTrigger = useCallback(() => {\n    handleClose();\n    triggerRef.current?.focus({ preventScroll: true });\n  }, [handleClose]);\n\n  useEffect(() => {\n    // close when parent menu closed\n    if (isParentMenuOpen === false) {\n      setIsOpen(false);\n    }\n  }, [isParentMenuOpen]);\n\n  const contextValue: SubmenuContextType = useMemo(\n    () => ({\n      isOpen,\n      getSubmenuListProps: (_props) => ({\n        'data-parent-menu': menuId,\n        onMouseOver: (event) => {\n          handleOpen();\n\n          _props.onMouseOver?.(event);\n        },\n        onMouseLeave: (event) => {\n          closeAndFocusTrigger();\n\n          _props.onMouseLeave?.(event);\n        },\n      }),\n      getSubmenuTriggerProps: (_props, _ref) => ({\n        ref: mergeRefs(triggerRef, _ref),\n        onKeyDown: (event) => {\n          if (event.key === 'ArrowRight') {\n            event.preventDefault();\n            handleOpen();\n          }\n\n          _props.onKeyDown?.(event);\n        },\n        onMouseOver: (event) => {\n          handleOpen();\n\n          _props.onMouseOver?.(event);\n        },\n        onMouseLeave: (event) => {\n          mouseLeaveTimerRef.current = window.setTimeout(\n            closeAndFocusTrigger,\n            300,\n          );\n\n          _props.onMouseLeave?.(event);\n        },\n      }),\n    }),\n    [isOpen, menuId, handleOpen, closeAndFocusTrigger],\n  );\n\n  return (\n    <SubmenuContextProvider value={contextValue}>\n      <Menu\n        {...propsToPropagateToSubmenus}\n        {...otherProps}\n        isOpen={isOpen}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        placement=\"right-start\"\n        offset={SUBMENU_OFFSET}\n        isAutoalignmentEnabled={false}\n      />\n    </SubmenuContextProvider>\n  );\n};\n","import React from 'react';\nimport { MenuTrigger } from '../MenuTrigger/MenuTrigger';\nimport { MenuItem, MenuItemProps } from '../MenuItem/MenuItem';\nimport { useSubmenuContext } from '../SubmenuContext';\nimport { ChevronRightIcon } from '@contentful/f36-icons';\nimport type { ExpandProps } from '@contentful/f36-core';\nimport { cx } from 'emotion';\nimport { getSubmenuTriggerStyles } from './SubmenuTrigger.styles';\n\nexport type SubmenuTriggerProps = Omit<\n  MenuItemProps<'button'>,\n  'isInitiallyFocused' | 'as'\n>;\n\nconst _SubmenuTrigger = (\n  props: ExpandProps<SubmenuTriggerProps>,\n  ref: React.Ref<HTMLButtonElement>,\n) => {\n  const { className, children } = props;\n  const { getSubmenuTriggerProps, isOpen } = useSubmenuContext();\n\n  const styles = getSubmenuTriggerStyles();\n\n  return (\n    <MenuTrigger>\n      <MenuItem\n        {...props}\n        {...getSubmenuTriggerProps(props, ref)}\n        className={cx(styles.root({ isActive: isOpen }), className)}\n      >\n        <span className={styles.content}>{children}</span>\n        <ChevronRightIcon className={styles.icon} />\n      </MenuItem>\n    </MenuTrigger>\n  );\n};\n\nexport const SubmenuTrigger = React.forwardRef(_SubmenuTrigger);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getSubmenuTriggerStyles = () => {\n  return {\n    root: ({ isActive }) =>\n      css({\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: tokens.spacingXs,\n        ...(isActive\n          ? {\n              backgroundColor: tokens.gray100,\n            }\n          : {}),\n      }),\n    content: css({\n      marginRight: tokens.spacingM,\n    }),\n    icon: css({\n      marginLeft: 'auto',\n      fill: 'currentColor',\n    }),\n  };\n};\n","import { Menu as OriginalMenu } from './Menu';\nimport { MenuList } from './MenuList/MenuList';\nimport { MenuListHeader } from './MenuList/MenuListHeader';\nimport { MenuListFooter } from './MenuList/MenuListFooter';\nimport { MenuItem } from './MenuItem/MenuItem';\nimport { MenuTrigger } from './MenuTrigger/MenuTrigger';\nimport { MenuDivider } from './MenuDivider/MenuDivider';\nimport { MenuSectionTitle } from './MenuSectionTitle/MenuSectionTitle';\nimport { Submenu } from './Submenu/Submenu';\nimport { SubmenuTrigger } from './SubmenuTrigger/SubmenuTrigger';\n\ntype CompoundMenu = typeof OriginalMenu & {\n  List: typeof MenuList;\n  ListHeader: typeof MenuListHeader;\n  ListFooter: typeof MenuListFooter;\n  Item: typeof MenuItem;\n  Trigger: typeof MenuTrigger;\n  Divider: typeof MenuDivider;\n  SectionTitle: typeof MenuSectionTitle;\n  Submenu: typeof Submenu;\n  SubmenuTrigger: typeof SubmenuTrigger;\n};\n\nexport const Menu = OriginalMenu as CompoundMenu;\nMenu.List = MenuList;\nMenu.ListHeader = MenuListHeader;\nMenu.ListFooter = MenuListFooter;\nMenu.Item = MenuItem;\nMenu.Trigger = MenuTrigger;\nMenu.Divider = MenuDivider;\nMenu.SectionTitle = MenuSectionTitle;\nMenu.Submenu = Submenu;\nMenu.SubmenuTrigger = SubmenuTrigger;\n"]}